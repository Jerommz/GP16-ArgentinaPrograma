/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadulp.Vistas;

import java.sql.*;
import java.time.LocalDate;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import universidadulp.AccesoADatos.AlumnoData;
import universidadulp.AccesoADatos.Conexion;
import universidadulp.Entidades.Alumno;

/**
 *
 * @author jero
 */
public class Alumnos extends javax.swing.JInternalFrame {

    /**
     * Creates new form Alumnos
     */
    AlumnoData alumnoDB = new AlumnoData();
    private Connection con;

    public Alumnos() {
        initComponents();
        con = Conexion.getConnection();
//        rellenarCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jtDni = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jtApellido = new javax.swing.JTextField();
        jcbEstado = new javax.swing.JCheckBox();
        jbNuevo = new javax.swing.JButton();
        jgGuardar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbBuscar = new javax.swing.JButton();
        jtID = new javax.swing.JTextField();
        jdcFechaDeNacimiento = new com.toedter.calendar.JDateChooser();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setText("Alumno");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.black);
        jLabel5.setText("Documento");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setForeground(java.awt.Color.black);
        jLabel7.setText("Apellido");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel8.setForeground(java.awt.Color.black);
        jLabel8.setText("Nombre");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel9.setForeground(java.awt.Color.black);
        jLabel9.setText("Fecha de nacimiento");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel10.setForeground(java.awt.Color.black);
        jLabel10.setText("Estado");

        jtDni.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtDni.setForeground(java.awt.Color.black);

        jtNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtNombre.setForeground(java.awt.Color.black);

        jtApellido.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtApellido.setForeground(java.awt.Color.black);

        jcbEstado.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbEstado.setForeground(java.awt.Color.black);

        jbNuevo.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbNuevo.setForeground(java.awt.Color.black);
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jgGuardar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jgGuardar.setForeground(java.awt.Color.black);
        jgGuardar.setText("MODIFICAR");
        jgGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jgGuardarActionPerformed(evt);
            }
        });

        jbEliminar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbEliminar.setForeground(java.awt.Color.black);
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbBuscar.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBuscar.setForeground(java.awt.Color.black);
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jtID.setEditable(false);
        jtID.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtID.setForeground(java.awt.Color.black);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addComponent(jLabel1)
                .addGap(0, 168, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcbEstado)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jdcFechaDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbBuscar)))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jbNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(jbEliminar)
                        .addGap(18, 18, 18)
                        .addComponent(jgGuardar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(40, 40, 40)
                                .addComponent(jtID, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(50, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jbBuscar)
                    .addComponent(jtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addComponent(jcbEstado))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbNuevo)
                            .addComponent(jbEliminar)
                            .addComponent(jgGuardar))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jdcFechaDeNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // Permite al usuario completar los campos si estan completos deja accionar al guardado como usuario nuevo
        try {
            if (jtDni.getText() == null || jtApellido.getText() == null || jtNombre.getText() == null || jdcFechaDeNacimiento.getDate() == null) {
                JOptionPane.showMessageDialog(null, "Debe rellenar todos los campos.");
            } else {
                int dni = Integer.parseInt(jtDni.getText());
                String apellido = jtApellido.getText();
                String nombre = jtNombre.getText();
                String fechaNac = ((JTextField) jdcFechaDeNacimiento.getDateEditor().getUiComponent()).getText();
                boolean estado = jcbEstado.isEnabled();
                Alumno alu = new Alumno(dni, apellido, nombre, LocalDate.parse(fechaNac), estado);
                alumnoDB.guardarAlumno(alu);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "No puede haber campos vacios.");
        }
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jgGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jgGuardarActionPerformed
      // TODO add your handling code here:
        if (jtApellido.getText() == null || jtNombre.getText() == null || jdcFechaDeNacimiento.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Primero debe realizar una busqueda.");
        } else {        
            int dni = Integer.parseInt(jtDni.getText());
            String apellido = jtApellido.getText();
            String nombre = jtNombre.getText();
            String fechaNac = ((JTextField) jdcFechaDeNacimiento.getDateEditor().getUiComponent()).getText();
            boolean estado = jcbEstado.isSelected();
            String sql = "select idAlumno from alumno where dni=?";

            try {
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setInt(1, dni);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    int id = rs.getInt("idAlumno");
                    Alumno alu = new Alumno(id, dni, apellido, nombre, LocalDate.parse(fechaNac), estado);
                    alumnoDB.modificarAlumno(alu);
                }

            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "error");
            }
          // TEste guardado es despues de una modificacion al alumno y seguido lo lleva a base de datos 
     
    }//GEN-LAST:event_jgGuardarActionPerformed
    }
    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        //Eliminacion del alumno  tanto en netbeans y en base de datos 
        if (jtApellido.getText() == null  || jtNombre.getText()== (null) || jdcFechaDeNacimiento.getDate()==null) {
            JOptionPane.showMessageDialog(null, "Primero debe realizar una busqueda.");
        } else {
            try {
                
                int dni = Integer.parseInt(jtDni.getText());
                String sql = "select idAlumno from alumno where dni=?";

                PreparedStatement ps = con.prepareStatement(sql);
                ps.setInt(1, dni);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    int id = rs.getInt("idAlumno");
                    alumnoDB.eliminarAlumno(id);
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error al acceder a la base de datos.");
            }
        }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        //  La accion consiste enbuscar al alumno por medio de su dni y llenar los campos con la informacion que tengamos en base de datos
        try {
            if (jtDni.getText() == null) {
                JOptionPane.showMessageDialog(null, "Para buscar, introduzca el DNI del alumno.");
            } else {
                int dni = Integer.parseInt(jtDni.getText());
                String sql = "select idAlumno, apellido, nombre, fechaNacimiento, estado from alumno where dni = ?";
                try {
                    PreparedStatement ps = con.prepareStatement(sql);
                    ps.setInt(1, dni);
                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        int id = rs.getInt("idAlumno");
                        jtID.setText(String.valueOf((char) alumnoDB.buscarAlumno(id).getIdAlumno()));
                        jtDni.setText(String.valueOf(alumnoDB.buscarAlumno(id).getDni()));
                        jtApellido.setText(alumnoDB.buscarAlumno(id).getApellido());
                        jtNombre.setText(alumnoDB.buscarAlumno(id).getNombre());
                        jcbEstado.setSelected(alumnoDB.buscarAlumno(id).isActivo());
                        jdcFechaDeNacimiento.setDate(Date.valueOf(alumnoDB.buscarAlumno(id).getFechaNac()));
                    } else {
                        JOptionPane.showMessageDialog(null, "Usuario no encontrado.");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error al ingresar a la base de datos.");
//             
                }
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(null, "Ingrese un DNI.");
        }
    }//GEN-LAST:event_jbBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JCheckBox jcbEstado;
    private com.toedter.calendar.JDateChooser jdcFechaDeNacimiento;
    private javax.swing.JButton jgGuardar;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtID;
    private javax.swing.JTextField jtNombre;
    // End of variables declaration//GEN-END:variables

//    private void rellenarCampos() {
//        jtID.setText("");
//        jtDni.setText("");
//        jtApellido.setText("");
//        jtNombre.setText("");
//        jcbEstado.setSelected(false);
//        jdFechaNac.setDate(Date.valueOf(LocalDate.now()));
//    }
}
