/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidadulp.Vistas;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import universidadulp.AccesoADatos.Conexion;
import universidadulp.AccesoADatos.InscripcionData;

/**
 *
 * @author jero
 */
public class Notas extends javax.swing.JInternalFrame {

    private Connection con;
    boolean editable = false;
    InscripcionData inscripcionDB = new InscripcionData();
    
    String[] col = {"ID", "Nombre", "Nota"};
    DefaultTableModel modelo = new DefaultTableModel(null, col) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return editable;
        }
    };

    public Notas() {
        initComponents();
        con = Conexion.getConnection();
        mostrarComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtTablaNotas = new javax.swing.JTable();
        jcbListaNotas = new javax.swing.JComboBox<>();
        jbBotonGuardarNotas = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 22)); // NOI18N
        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setText("Carga de notas");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setForeground(java.awt.Color.black);
        jLabel5.setText("Seleccione un alumno:");

        jtTablaNotas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtTablaNotas.setForeground(java.awt.Color.black);
        jtTablaNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtTablaNotas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTablaNotasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtTablaNotas);

        jcbListaNotas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jcbListaNotas.setForeground(java.awt.Color.black);
        jcbListaNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbListaNotasActionPerformed(evt);
            }
        });

        jbBotonGuardarNotas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jbBotonGuardarNotas.setForeground(java.awt.Color.black);
        jbBotonGuardarNotas.setText("Guardar");
        jbBotonGuardarNotas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBotonGuardarNotasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jcbListaNotas, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(163, 163, 163))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jbBotonGuardarNotas)
                        .addGap(195, 195, 195))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jcbListaNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jbBotonGuardarNotas)
                .addGap(43, 43, 43))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcbListaNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbListaNotasActionPerformed
        // TODO add your handling code here:
        String dataCB = jcbListaNotas.getSelectedItem().toString();
        mostrarTabla(dataCB);
    }//GEN-LAST:event_jcbListaNotasActionPerformed

    private void jtTablaNotasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTablaNotasMouseClicked
        // TODO add your handling code here:
        if (jtTablaNotas.getSelectedColumn() == 2) {
            editable = true;
        } else {
            editable = false;
        }
    }//GEN-LAST:event_jtTablaNotasMouseClicked

    private void jbBotonGuardarNotasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBotonGuardarNotasActionPerformed
        // TODO add your handling code here:
        String sql = "select idMateria from materia where nombre = ?";
        int i = jtTablaNotas.getSelectedRow();
        String idAl = jtTablaNotas.getModel().getValueAt(i, 0).toString();
        String nombreMat = jtTablaNotas.getModel().getValueAt(i, 1).toString();
        String notaAl = jtTablaNotas.getModel().getValueAt(i, 2).toString();
        try {
            
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, nombreMat);
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                int idMat = rs.getInt("idMateria");
                inscripcionDB.actualizarNota(Integer.valueOf(idAl), idMat, Integer.valueOf(notaAl));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la base de datos.");
        }
    }//GEN-LAST:event_jbBotonGuardarNotasActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbBotonGuardarNotas;
    private javax.swing.JComboBox<String> jcbListaNotas;
    private javax.swing.JTable jtTablaNotas;
    // End of variables declaration//GEN-END:variables

    public int mostrarComboBox() {
        String sql = "select idAlumno, nombre, apellido from alumno order by idAlumno ASC";
        int id = 0;
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                id = rs.getInt("idAlumno");
                String idAlumno = String.valueOf(rs.getInt("idAlumno"));
                String nombre = rs.getString("nombre");
                String apellido = rs.getString("apellido");
                String dato[] = {idAlumno + " " + nombre + " " + apellido};
                for (String datos : dato) {
                    jcbListaNotas.addItem(datos);
                }

            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la base de datos.");
        }
        return id;
    }

    public void mostrarTabla(String dataCB) {
        String[] valores = dataCB.split(" ");
        int id = Integer.valueOf(valores[0]);
        jtTablaNotas.setModel (modelo);

        TableColumnModel columna = jtTablaNotas.getColumnModel();
        columna.getColumn(0).setMaxWidth(30);
        columna.getColumn(2).setMaxWidth(60);

        String sql = "select materia.idMateria, materia.nombre, inscripcion.nota\n"
                + "from `materia`\n"
                + "inner join inscripcion on inscripcion.idMateria = materia.idMateria\n"
                + "inner join alumno on alumno.idAlumno = inscripcion.idAlumno\n"
                + "where inscripcion.idAlumno = ?";

        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, id);

            ResultSet rs = ps.executeQuery();

            while (rs.next()) {
                String idMateria = String.valueOf(rs.getInt("materia.idMateria"));
                String nombre = rs.getString("materia.nombre");
                String nota = rs.getString("inscripcion.nota");
                String dataM[] = {idMateria, nombre, nota};
                modelo.addRow(dataM);
            }

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error al acceder a la base de datos.");
        }
    }
}
